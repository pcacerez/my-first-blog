https://www.pythonanywhere.com/

# Nombre Usuario: sombr25
# WEB. conectafs.pythonanywhere.com.
# Contraseña: La de siempre.

# Elije la opción para iniciar una consola "Bash",

git clone https://github.com/pcacerez/my-first-blog.git


# Crear un virtualenv en PythonAnywhere

    cd my-first-blog
    virtualenv --python=python3.4 myvenv
    source myvenv/bin/activate
    pip install django==1.8 whitenoise

"""
    whitenoise: Es una herramienta para servir los llamados "ficheros estáticos".
    Los ficheros estáticos funcionan de distinta forma en los servidores en comparación
    con cómo lo hacen en nuestro propio ordenador y necesitamos una herramienta como
    "whitenoise" para servirlos.
    collectstatic Le dice a Django que recopile todos los ficheros estáticos que necesita en el servidor
"""

    python manage.py collectstatic
    Type 'yes' to continue, or 'no' to cancel: yes

# Crear la base de datos en PythonAnywher

# Iniciamos la base de datos en el servidor, con migrate y createsuperuser:

    python manage.py migrate
    python manage.py createsuperuser

# Publicar nuestro blog como una aplicación web
    """
    Haz clic en el logo de PythonAnywhere para volver al panel principal,
    haz clic en la pestaña Web y pincha en Add a new web app.

    En la ventana de diálogo, después de confirmar el nombre de dominio,
    (conectafs.pythonanywhere.com.)
    elije manual configuration (configuración manual) (NB la opción "Django" no).
    Luego, elije Python 3.4 y haz clic en "Next" para terminar con el asistente.
    """
# Configurar el virtualenv
    """
    Serás redirigida a la pantalla de configuración de PythonAnywhere para tu aplicación web,
    a la que deberás acceder cada vez que quieras hacer cambios en la aplicación del servidor.
    En la sección "Virtualenv", haz clic en el texto rojo que dice "Enter the path to a virtualenv"
    (Introduce la ruta a un virtualenv) y escribe: /home/conectafs/my-first-blog/myvenv/
    """

# Configurar el fichero WSGI

"""
    Django funciona utilizando el "protocolo WSGI", un estándar para servir sitios web usando Python,
    que PythonAnywhere soporta. La forma de configurar PythonAnywhere para que reconozca nuestro
    blog Django es editar un fichero de configuración WSGI.
    Haz clic en el enlace "WSGI configuration file"
    (en la sección "Code" en la parte de arriba de la página; se llamará
    algo parecido a /var/www/<tu-usuario>_pythonanywhere_com_wsgi.py) y te redirigirá al editor.
    Elimina todo el contenido actual y reemplázalo con algo como esto:
"""
    # +++++++++++ DJANGO +++++++++++
    # To use your own Django app use code like this:
    import os
    import sys

    # assuming your Django settings file is at '/home/myusername/mysite/mysite/settings.py'
    path = '/home/conectafs/my-first-blog'
    if path not in sys.path:
        sys.path.append(path)
    os.environ['DJANGO_SETTINGS_MODULE'] = 'mysite.settings'

    ## Uncomment the lines below depending on your Django version
    ###### then, for Django >=1.5:
    from django.core.wsgi import get_wsgi_application
    application = get_wsgi_application()
    ###### or, for older Django <=1.4
    #import django.core.handlers.wsgi
    #application = django.core.handlers.wsgi.WSGIHandler()
